{"version":3,"sources":["../src/index.js"],"names":["CONSTRUCTOR_CONFIG","defineStack","EmptyObjectError","styles","join","UndefinedObjectError","msg","message","name","constructor","stack","Error","captureStackTrace","prototype","Object","create","assign","value","getObjectKeys","obj","undefined","keys","length","err","console","groupCollapsed","log","groupEnd","testObj1","testObj2"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,UAAnC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,MAAM,GAAG,CACX,gBADW,EAET,qBAFS,EAGT,cAHS,EAIT,cAJS,EAKbC,IALa,CAKR,GALQ,CAAf;;AAQA,SAASC,oBAAT,CAA8BC,GAA9B,EAAmC;AAC/B,OAAKC,OAAL,GAAeD,GAAf;AACA,OAAKE,IAAL,GAAY,KAAKC,WAAL,CAAiBD,IAA7B;AAGA,MAAIE,KAAK,GAAG,IAAIC,KAAJ,GAAYD,KAAxB;;AAEA,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,SAAKA,KAAL,GAAaT,WAAW,CAACS,KAAD,CAAxB;AACH,GAFD,MAEO;AACHC,IAAAA,KAAK,CAACC,iBAAN,CAAwB,IAAxB,EAA8B,KAAKH,WAAnC;AACH;AACJ;;AAEDJ,oBAAoB,CAACQ,SAArB,GAAiCC,MAAM,CAACC,MAAP,CAAcJ,KAAK,CAACE,SAApB,EAA+B;AAC5DJ,EAAAA,WAAW,EAAEK,MAAM,CAACE,MAAP,CAAchB,kBAAd,EAAkC;AAC3CiB,IAAAA,KAAK,EAAEZ;AADoC,GAAlC;AAD+C,CAA/B,CAAjC;;AAOA,SAASa,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAI;AAEA,QAAIA,GAAG,KAAKC,SAAZ,EAAuB;AACnB,YAAM,IAAIf,oBAAJ,CAAyB,4BAAzB,CAAN;AACH;;AAED,QAAIS,MAAM,CAACO,IAAP,CAAYF,GAAZ,EAAiBG,MAAjB,KAA4B,CAAhC,EAAmC;AAC/B,YAAM,IAAIpB,gBAAJ,CAAqB,4FAArB,CAAN;AACH;;AAED,WAAOY,MAAM,CAACO,IAAP,CAAYF,GAAZ,CAAP;AACH,GAXD,CAWE,OAAOI,GAAP,EAAY;AAEVC,IAAAA,OAAO,CAACC,cAAR,CAAuB,OAAOF,GAAG,CAACf,IAAlC,EAAwCL,MAAxC,EAFU,CAGV;;AAEAqB,IAAAA,OAAO,CAACE,GAAR,CAAY,OAAOH,GAAG,CAAChB,OAAvB,EAAgCJ,MAAhC,EAAwC,mBAAxC,EAA6DgB,GAA7D;AACA;;;;;;AAKAK,IAAAA,OAAO,CAACE,GAAR,CAAYH,GAAG,CAACb,KAAhB,EAXU,CAYV;AAEA;;AACAc,IAAAA,OAAO,CAACG,QAAR;AAEH;AACJ;;AAED,MAAMC,QAAQ,GAAGR,SAAjB;AACA,MAAMS,QAAQ,GAAG,EAAjB,C,CAEA;;AACAX,aAAa,CAACU,QAAD,CAAb,C,CAEA;;AACAV,aAAa,CAACW,QAAD,CAAb;AAEAL,OAAO,CAACE,GAAR,CAAY,KAAZ","sourcesContent":["import { CONSTRUCTOR_CONFIG } from \"./config\";\nimport { defineStack } from \"./helpers\";\nimport EmptyObjectError from \"./EmptyObjectError\";\n\nconst styles = [\n    'display: block'\n    , 'background: #E91E63'\n    , 'color: white'\n    , 'padding: 4px'\n].join(';');\n\n\nfunction UndefinedObjectError(msg) {\n    this.message = msg;\n    this.name = this.constructor.name;\n\n\n    let stack = new Error().stack;\n\n    if (typeof stack === 'string') {\n        this.stack = defineStack(stack);\n    } else {\n        Error.captureStackTrace(this, this.constructor)\n    }\n}\n\nUndefinedObjectError.prototype = Object.create(Error.prototype, {\n    constructor: Object.assign(CONSTRUCTOR_CONFIG, {\n        value: UndefinedObjectError\n    })\n});\n\n\nfunction getObjectKeys(obj) {\n    try {\n\n        if (obj === undefined) {\n            throw new UndefinedObjectError('Passed object is undefined');\n        }\n\n        if (Object.keys(obj).length === 0) {\n            throw new EmptyObjectError('Passed object is an empty object. There are no properties present inside the passed object');\n        }\n\n        return Object.keys(obj);\n    } catch (err) {\n\n        console.groupCollapsed('%c' + err.name, styles);\n        // Start grouping\n\n        console.log('%c' + err.message, styles, '\\n Passed object:', obj);\n        /* \n            Both the trace and stack options look good\n            - You can customise the err.stack as per requirements\n            - No customisations in console.trace()\n        */\n        console.log(err.stack);\n        // console.trace();\n\n        // End grouping\n        console.groupEnd();\n\n    }\n}\n\nconst testObj1 = undefined;\nconst testObj2 = {};\n\n// Test 1\ngetObjectKeys(testObj1);\n\n// Test 2\ngetObjectKeys(testObj2);\n\nconsole.log(12321);"],"file":"index.js"}